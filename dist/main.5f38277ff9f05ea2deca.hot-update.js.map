{"version":3,"file":"main.5f38277ff9f05ea2deca.hot-update.js","mappings":";;;;;;;;;;;;;;;AAAoE;AAWpE,MAAM,aAAc,SAAQ,2DAAc;IAA1C;;QAIE,WAAM,GAAW;YACf,GAAG,EAAE,IAAI;SACV;QAED,YAAO,GAAG;YACR,OAAO,EAAE,IAAI;SACH,CAAC;IA2Df,CAAC;IAzDC,MAAM,KAAI,CAAC;IAEX,eAAe;QACb,IAAI,CAAC,cAAc,EAAE,CAAC;QAEtB,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QACjC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE;YACpB,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC;YACpB,OAAO;SACR;QAED,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,YAAY,gBAAgB,EAAE;YAC/C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;YAC7B,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,mGAAmG;YACpH,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,WAAW,CAAC;YACrC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SAC7B;aAAM;YACL,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAEvC,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,KAAK,QAAQ,EAAE;gBACvC,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;aAClC;iBAAM;gBACL,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;aACxC;YAED,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;SACnB;QAED,IAAI,CAAC,OAAO,GAAG,IAAI,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAClD,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC,YAAY,CAAC;QAC5C,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC,YAAY,CAAC;QAC5C,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC;QAEvC,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QACpC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACpB,CAAC;IAED,SAAS;QACP,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,cAAc;QACZ,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;YAC5B,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;SACxB;IACH,CAAC;IAEO,kBAAkB;QACxB,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAC9C,KAAK,CAAC,WAAW,GAAG,8BAA8B,CAAC;QACnD,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;QACtB,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;QACnB,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;QAClB,OAAO,KAAK,CAAC;IACf,CAAC;CACF;AAOM,MAAM,iBAAiB,GAAG,kBAAkB,CAAC;AAC7C,SAAS,iBAAiB;IAC/B,OAAO,IAAI,aAAa,EAAE,CAAC;AAC7B,CAAC;;;;;;;;;UC1FD","sources":["webpack://vs-app/../common/src/sdk-components/VideoRenderer.ts","webpack://vs-app/webpack/runtime/getFullHash"],"sourcesContent":["import { SceneComponent, ComponentOutput } from '../SceneComponent';\nimport { Texture, VideoTexture } from 'three';\n\ntype Inputs = {\n  src: MediaStream | string | HTMLVideoElement | null;\n};\n\ntype Outputs = {\n  texture: Texture | null;\n} & ComponentOutput;\n\nclass VideoRenderer extends SceneComponent {\n  private video: HTMLVideoElement;\n  private texture: VideoTexture;\n\n  inputs: Inputs = {\n    src: null,\n  }\n\n  outputs = {\n    texture: null,\n  } as Outputs;\n\n  onInit() {}\n\n  onInputsUpdated() {\n    this.releaseTexture();\n\n    const THREE = this.context.three;\n    if (!this.inputs.src) {\n      this.video.src = '';\n      return;\n    }\n\n    if (this.inputs.src instanceof HTMLVideoElement) {\n      this.video = this.inputs.src;\n      this.video.src = 'https://flipcontents.s3.ap-northeast-2.amazonaws.com/CNP/HeyOrder%20%28Web%29/HeyOrder_Mobile.mp4'\n      this.video.crossOrigin = 'anonymous';\n      console.log(this.video);\n      console.log(this.video.src);\n    } else {\n      this.video = this.createVideoElement();\n\n      if (typeof this.inputs.src === 'string') {\n        this.video.src = this.inputs.src;\n      } else {\n        this.video.srcObject = this.inputs.src;\n      }\n\n      this.video.load();\n    }\n\n    this.texture = new THREE.VideoTexture(this.video);\n    this.texture.minFilter = THREE.LinearFilter;\n    this.texture.magFilter = THREE.LinearFilter;\n    this.texture.format = THREE.RGBAFormat;\n\n    this.outputs.texture = this.texture;\n    this.video.play();\n  }\n\n  onDestroy() {\n    this.releaseTexture();\n  }\n\n  releaseTexture() {\n    if (this.texture) {\n      this.outputs.texture = null;\n      this.texture.dispose();\n    }\n  }\n\n  private createVideoElement() {\n    const video = document.createElement('video');\n    video.crossOrigin = 'anonymous  | use-credentials';\n    video.autoplay = true;\n    video.muted = true;\n    video.loop = true;\n    return video;\n  }\n}\n\nexport interface IVideoRenderer extends SceneComponent {\n  inputs: Inputs;\n  outputs: Outputs;\n}\n\nexport const videoRendererType = 'mp.videoRenderer';\nexport function makeVideoRenderer() {\n  return new VideoRenderer();\n}\n","__webpack_require__.h = () => (\"b51ed12a79f39dbac589\")"],"names":[],"sourceRoot":""}